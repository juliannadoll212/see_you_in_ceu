plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'dev.flutter.flutter-gradle-plugin'
}

// Disable JDK image transform for Android SDK 35 compatibility
configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'androidx.core' && !details.requested.name.contains('lifecycle')) {
            details.useVersion '1.9.0'
        }
    }
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// Ensure the output directory exists
def outputDir = "${rootProject.projectDir}/../build/app/outputs/apk"
def flutterOutputDir = "${rootProject.projectDir}/../build/app/outputs/flutter-apk"
new File(outputDir).mkdirs()
new File(flutterOutputDir).mkdirs()

android {
    namespace 'com.android.see_you_in_ceu'
    compileSdk 35
    ndkVersion '27.0.12077973'
    
    // Skip dependency validation to avoid issues with the JDK Image Transform
    lintOptions {
        disable 'GradleDependency'
        disable 'AndroidGradlePluginVersion'
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        // Force compatibility mode
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        // Application ID must match package name in google-services.json
        applicationId 'com.android.see_you_in_ceu'
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk 23
        targetSdk 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        
        // Add debugging flags for Google Sign-In
        manifestPlaceholders = [appAuthRedirectScheme: 'com.android.see_you_in_ceu']
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            
            // Enable minification with ProGuard
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        
        debug {
            // Apply ProGuard in debug mode too for testing
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig true
    }

    // Fix output location to ensure Flutter can find the APK
    // Use a different approach compatible with AGP 8+
    tasks.whenTaskAdded { task ->
        if (task.name.contains('package') && task.name.contains('Debug')) {
            task.doLast {
                copy {
                    from "${buildDir}/outputs/apk/debug"
                    into "${rootProject.projectDir}/../build/app/outputs/apk/debug"
                    include "*.apk"
                }
                copy {
                    from "${buildDir}/outputs/apk/debug"
                    into "${rootProject.projectDir}/../build/app/outputs/flutter-apk"
                    include "*.apk"
                }
                // Create a success marker file
                new File("${rootProject.projectDir}/../build/app/outputs/flutter-apk/build_success.txt").text = "Build completed successfully at ${new Date()}"
            }
        }
    }
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    
    // Add Google Play Services Auth for Google Sign-In with explicit version
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    implementation 'com.google.android.gms:play-services-base:18.2.0'
    // Add explicit Play Services provider installer
    implementation 'com.google.android.gms:play-services-safetynet:18.0.1'
    
    // Firebase dependencies
    implementation platform('com.google.firebase:firebase-bom:32.7.4')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-storage'
    // ML Vision was deprecated and removed from Firebase, replacing with ML Kit
    implementation 'com.google.mlkit:image-labeling:17.0.7'
    implementation 'com.google.mlkit:object-detection:17.0.0'
    implementation 'com.google.mlkit:text-recognition:16.0.0'
}

flutter {
    source '../..'
} 