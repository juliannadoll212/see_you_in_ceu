rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check admin status
    function isAdmin() {
      return isAuthenticated() &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // General access rules - read public, write requires authentication
    match /{allPaths=**} {
      allow read: if true;
      // Removed general write rule to avoid conflicts with specific rules
    }

    // Specific rules for lost item images
    match /lost_items/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // Specific rules for found item images
    match /found_items/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Specific rule for object detection images
    match /detections/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // User profile images
    match /user_profiles/{userId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Additional rule for detected_objects folder (for backwards compatibility)
    match /detected_objects/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
  }
} 