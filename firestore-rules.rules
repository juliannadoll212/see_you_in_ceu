rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow public read access to all collections
    match /{document=**} {
      allow read: if true;
    }
    
    // Allow authenticated users to write to specific collections
    match /lost_items/{item} {
      allow write: if request.auth != null;
    }
    
    match /found_items/{item} {
      allow write: if request.auth != null;
    }
    
    match /lost_item_reports/{report} {
      allow write: if request.auth != null;
    }
    
    match /found_item_reports/{report} {
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to write to detections collection
    match /detections/{detection} {
      allow write: if request.auth != null;
    }
    
    // For user profiles collection - users can only write to their own document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow admins to read any user document (so isAdmin() checks work)
      allow get: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
        
      // Allow admins to list all users
      allow list: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // FOUND ITEMS
    match /found_items/{itemId} {
      function isAdmin() {
        return request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }

      function isOwner() {
        return request.auth != null &&
          resource.data.foundBy == request.auth.uid;
      }

      allow read: if isAdmin() || resource.data.approved == true || isOwner();
      allow list: if isAdmin();
      allow create: if request.auth != null;
      allow update, delete: if isOwner() || isAdmin();
    }

    // LOST ITEMS
    match /lost_items/{itemId} {
      function isAdmin() {
        return request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }

      function isOwner() {
        return request.auth != null &&
          resource.data.reportedBy == request.auth.uid;
      }

      allow list: if true;
      allow get: if true;
      allow create: if request.auth != null;
      allow update, delete: if isOwner() || isAdmin();
    }

    // NOTIFICATIONS
    match /notifications/{notificationId} {
      function isAdmin() {
        return request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }

      // All authenticated users can read notifications
      allow read: if request.auth != null;
      
      // Only admins can create, update, or delete notifications
      allow create, update, delete: if isAdmin();
    }
    
    // OBJECT DETECTIONS
    match /detections/{detectionId} {
      function isAdmin() {
        return request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }
      
      function isOwner() {
        return request.auth != null &&
          resource.data.uploadedBy == request.auth.uid;
      }
      
      // Allow authenticated users to read their own detections or all if admin
      allow read: if request.auth != null && (isOwner() || isAdmin());
      
      // Allow authenticated users to create detections
      allow create: if request.auth != null;
      
      // Only owner or admin can update/delete
      allow update, delete: if isOwner() || isAdmin();
    }
  }
} 